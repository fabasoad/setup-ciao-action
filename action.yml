---
name: "Setup Ciao"
author: Yevhen Fabizhevskyi
description: "This action installs Ciao CLI tool."
branding:
  icon: terminal
  color: gray-dark
inputs:
  version:
    description: Ciao version. Defaults to the latest version.
    required: false
    default: "latest"
  force:
    description: |
      If "false" skips installation if ciao is already installed. If "true"
      installs ciao in any case. Defaults to "false".
    required: false
    default: "false"
outputs:
  installed:
    description: Whether umka was installed or not.
    value: "${{ steps.install-ciao.outcome == 'success' }}"
runs:
  using: "composite"
  steps:
    - name: Collect info
      id: info
      env:
        INPUT_FORCE: "${{ inputs.force }}"
      run: |
        if [ "${INPUT_FORCE}" = "false" ] && command -v ciao >/dev/null 2>&1; then
          bin_installed="true"
        else
          bin_installed="false"
        fi
        echo "bin-installed=${bin_installed}" >> "$GITHUB_OUTPUT"
      shell: sh
    - name: Install Ciao
      if: ${{ steps.info.outputs.bin-installed == 'false' }}
      id: install-ciao
      env:
        INPUT_VERSION: "${{ inputs.version }}"
      run: |
        HOME=$RUNNER_TEMP curl https://ciao-lang.org/boot -sSfL | sh -s -- \
          --prebuilt-bin \
          local-install \
          --prebuilt-docs \
          --release=${INPUT_VERSION}

        ls -la "$RUNNER_TEMP"
        for dir in $RUNNER_TEMP/.ciaoroot/*/; do
          if [ -d "${dir}" ]; then
            echo "${dir}/build/bin" >> "$GITHUB_PATH"
            echo "CIAOENGINE=${dir}/build/eng/ciaoengine/objs" >> "$GITHUB_ENV"
            echo "CIAOLIB=${dir}/build" >> "$GITHUB_ENV"
          fi
        done
      shell: sh
