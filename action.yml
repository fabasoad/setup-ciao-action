---
name: "Setup Ciao"
author: Yevhen Fabizhevskyi
description: "This action installs Ciao CLI tool."
branding:
  icon: terminal
  color: gray-dark
inputs:
  version:
    description: Ciao version. Defaults to the latest version.
    required: false
    default: "latest"
  force:
    description: |
      If "false" skips installation if ciao is already installed. If "true"
      installs ciao in any case. Defaults to "false".
    required: false
    default: "false"
  github-token:
    description: |
      GitHub token that is used to send requests to GitHub API such as downloading
      asset. Defaults to the token provided by GitHub Actions environment.
    required: false
    default: ${{ github.token }}
outputs:
  installed:
    description: Whether umka was installed or not.
    value: "${{ steps.install-ciao.outcome == 'success' }}"
runs:
  using: "composite"
  steps:
    - name: Collect info
      id: info
      run: |
        if [ "${INPUT_FORCE}" = "false" ] && command -v ciao >/dev/null 2>&1; then
          bin_installed="true"
        else
          bin_installed="false"
        fi
        echo "bin-installed=${bin_installed}" >> "$GITHUB_OUTPUT"

        bin_dir="ciao_$(date +%s)"
        echo "bin-dir=${bin_dir}" >> "$GITHUB_OUTPUT"

        bin_path="${GITHUB_WORKSPACE}/${bin_dir}"
        mkdir -p "${bin_path}"
        echo "bin-path=${bin_path}" >> "$GITHUB_OUTPUT"

        target_path="${RUNNER_TEMP}/${bin_dir}"
        mkdir -p "${target_path}"
        echo "target-path=${target_path}" >> "$GITHUB_OUTPUT"
      shell: sh
    - name: Download binary
      if: ${{ steps.info.outputs.bin-installed == 'false' }}
      id: download-binary
      uses: robinraju/release-downloader@v1
      with:
        repository: "ciao-lang/ciao"
        latest: "${{ inputs.version == 'latest' }}"
        tag: "${{ inputs.version != 'latest' && format('v{0}', inputs.version) || '' }}"
        fileName: "ciao-*-${{ runner.os == 'Linux' && 'LINUXx86_64' || (runner.os == 'Windows' && 'Win32x86_64' || 'DARWINaarch64') }}.tar.gz"
        extract: "true"
        out-file-path: "${{ steps.info.outputs.bin-dir }}"
        token: "${{ inputs.github-token }}"
    - name: Install Ciao
      if: ${{ steps.info.outputs.bin-installed == 'false' }}
      id: install-ciao
      env:
        INPUT_VERSION: "${{ inputs.version }}"
      run: |
        curl https://ciao-lang.org/boot -sSfL | sh -s -- --release ${INPUT_VERSION}
      #        tag_name="${{ steps.download-binary.outputs.tag_name }}"
      #        version="${tag_name#v}"
      #        version="${version%%-*}"
      #        mv -i ${{ steps.info.outputs.bin-path }}/Ciao-${version}/* ./
      #        rm -rf "${{ steps.info.outputs.bin-path }}"
      #        ./ciao-boot.sh local-install
      #        bin_path="$(pwd)/build/bin"
      #        echo "${bin_path}" >> "$GITHUB_PATH"
      shell: sh
#      working-directory: "${{ steps.info.outputs.target-path }}"
